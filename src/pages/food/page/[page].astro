---
import { getIndex, getEntries } from "@lib/contentParser";
import { sortByTitle } from "@lib/sortFunctions";
import type { FoodEntry } from "@/types";
import CollectionLayout from "@components/food/CollectionLayout.astro";

const entryIndex = (await getIndex("food")) as FoodEntry;
const entries = (await getEntries("food", sortByTitle)) as FoodEntry[];

const { page } = Astro.params;

const entriesPerPage = 6;
const currentPageIndex = page && !isNaN(Number(page)) ? Number(page) : 1;
const pageCount = Math.ceil(entries.length / entriesPerPage);
const indexOfLastEntry = currentPageIndex * entriesPerPage;
const indexOfFirstEntry = indexOfLastEntry - entriesPerPage;
const currentEntries = entries.slice(indexOfFirstEntry, indexOfLastEntry);

export async function getStaticPaths() {
  const entries = (await getEntries("food", sortByTitle)) as FoodEntry[];
  // divisor below must equal entriesPerPage
  const pageCount = Math.ceil(entries.length / 6);
  const paths = [];

  for (let i = 1; i < pageCount; i++) {
    paths.push({
      params: {
        page: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<CollectionLayout
  entryIndex={entryIndex}
  entries={currentEntries}
  pageIndex={currentPageIndex}
  pageCount={pageCount}
/>
