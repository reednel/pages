---
import type { DrinksEntry } from "@/types";
import Share from "@components/common/Share.astro";
import { Image } from "astro:assets";
import BaseLayout from "@components/base/BaseLayout.astro";
import { upperHumanize, markdownify, lowerHumanize } from "@lib/textConverter";
import DrinksCard from "@components/drinks/Card.astro";

import { FaRegUserCircle } from "react-icons/fa";
import Button from "@components/common/Button.astro";

interface Props {
  entry: DrinksEntry;
  relatedEntries: DrinksEntry[];
}

const { entry, relatedEntries } = Astro.props;
const {
  title,
  author,
  description,
  image,
  spirits,
  bottles,
  tags,
  ingredients,
  instructions,
  notes,
} = entry.data;

// alphabetize
{ spirits && spirits.sort((a: string, b: string) => a.localeCompare(b)) }
{ bottles && bottles.sort((a: string, b: string) => a.localeCompare(b)) }
{ tags && tags.sort((a: string, b: string) => a.localeCompare(b)) }
---

<BaseLayout title={title} description={description} image={image?.src}>
  <section class="section">
    <div class="container">
      <div class="row justify-center">
        <article class="lg:col-10 flex flex-wrap content-start">
          <!-- Title -->
          <h1 set:html={title} class="p-2 col basis-full min-w-72" />
          <!-- Cover Photo -->
          {
            image && (
              <div class="col basis-2/3 p-2 min-w-72">
                <div class="glass rounded-lg intersect:animate-fadeDown opacity-0">
                  <Image
                    src={image}
                    width={1920}
                    height={1080}
                    alt={title}
                    class="w-full rounded-lg"
                    format="webp"
                  />
                </div>
              </div>
            )
          }
          <!-- About -->
          <section class="col basis-1/3 p-2 min-w-72">
            <div
              class="glass rounded-lg p-2 h-full intersect:animate-fadeUp opacity-0"
            >
              <!-- Author -->
              {
                author && (
                  <div class="m-4">
                    <FaRegUserCircle className={"mr-2 -mt-1 inline-block"} />
                    {upperHumanize(author)}
                  </div>
                )
              }
              <!-- Spirits -->
              { spirits && (
                <ul>
                  { spirits.map((spirit) => (
                    <li class="m-1 inline-block">
                      <Button
                        label={spirit}
                        link={`/drinks/spirits/${lowerHumanize(spirit)}`}
                        type="secondary"
                      />
                    </li>
                  ))}
                </ul>
              )}
              <!-- Bottles -->
              { bottles && (
                <ul>
                  { bottles.map((bottle) => (
                    <li class="m-1 inline-block">
                      <Button
                        label={bottle}
                        link={`/drinks/bottles/${lowerHumanize(bottle)}`}
                        type="secondary"
                      />
                    </li>
                  ))}
                </ul>
              )}
              <!-- Tags -->
              { tags && (
                <ul>
                  { tags.map((tag) => (
                    <li class="m-1 inline-block">
                      <Button
                        label={tag}
                        link={`/drinks/tags/${lowerHumanize(tag)}`}
                        type="secondary"
                      />
                    </li>
                  ))}
                </ul>
              )}
              <!-- Description -->
              {
                description && (
                  <div>
                    {author ? (
                      <hr class="my-2" />
                    ) : null}
                    <div class="m-4">
                      <div set:html={markdownify(description)} />
                    </div>
                  </div>
                )
              }
            </div>
          </section>
          <!-- Ingredients -->
          {
            ingredients && (
              <section class="col basis-1/3 p-2 min-w-72">
                <div class="glass rounded-lg p-4 intersect:animate-fadeUp opacity-0">
                  <h2 set:html="Ingredients" class="mb-2" />
                  <div class="row justify-center">
                    {ingredients.list.map((it: string, index: number) => (
                      <div class="row my-1">
                        <div class="col-7" set:html={ingredients.list[index]} />
                        <div
                          class="col-5 text-right"
                          set:html={ingredients.qty[index]}
                        />
                        <hr class="my-1" />
                      </div>
                    ))}
                  </div>
                </div>
              </section>
            )
          }
          <!-- Instructions -->
          {
            instructions && (
              <section class="col basis-full p-2 min-w-72">
                <div class="glass rounded-lg p-4 intersect:animate-fadeUp opacity-0">
                  <h2 set:html="Instructions" class="mb-2" />
                  <div class="row justify-center">
                    {instructions.map((it: string, index: number) => (
                      <div class="row my-1">
                        <div class="col">
                          {index + 1}. {it}
                        </div>
                        <hr class="my-1" />
                      </div>
                    ))}
                  </div>
                </div>
              </section>
            )
          }
          <!-- Notes -->
          {
            notes && (
              <section class="col basis-full p-2 min-w-72">
                <div class="glass rounded-lg p-4 intersect:animate-fadeUp opacity-0">
                  <h2 set:html="Notes" class="mb-2" />
                  <div class="row justify-center">
                    {notes.map((it: string, index: number) => (
                      <div class="row my-1">
                        <div class="col">{it}</div>
                        <hr class="my-1" />
                      </div>
                    ))}
                  </div>
                </div>
              </section>
            )
          }
        </article>
        <!-- Share -->
        <div
          class="flex col-10 p-2 items-center justify-center lg:justify-end px-6"
        >
          <Share
            title={title}
            description={description}
            folder="drinks"
            id={entry.id}
          />
        </div>
      </div>
      <!-- Similar Drinks -->
      {
        relatedEntries.length > 0 && (
          <!-- Related posts -->
          <div class="section pb-0">
            <h2 class="h3 mb-8 text-center">Similar Drinks</h2>
            <div class="row justify-center">
              {
                relatedEntries.slice(0, 3).map((entry) => (
                  <div class="lg:col-4 mb-4 h-min">
                    <DrinksCard entry={entry} />
                  </div>
                ))
              }
            </div>
          </div>
        )
      }
    </div>
  </section>
</BaseLayout>
